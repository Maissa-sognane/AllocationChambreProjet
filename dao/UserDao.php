<?php
class UserDao extends Manager{
    public function __construct(){
        $this->tableName="etudiant";
        $this->className="User";
    }

    public function add($obj){

    }
    public function update($objet)
    {

    }

    public function updateUser($nom,$prenom,$email,$tel,$matricule,$date,$id){
        $req =  "UPDATE etudiant SET nom = :nom,prenom = :prenom,email = :email,tel = :tel,matricule = :matricule, dateNaissance = :dateNaissance WHERE id = $id";
        $row = array(
            'nom'=>$nom,
            'prenom'=>$prenom,
            'email'=>$email,
            'tel'=>$tel,
            'matricule'=>$matricule,
            'dateNaissance'=>$date
        );
        $ligne = $this->executeUpdate($req,$row);
        return $ligne;
    }
//$nom,$prenom,$email,$tel,$matricule,$date
    public function addUser($nom,$prenom,$email,$tel,$matricule,$date){
        $req = "INSERT INTO etudiant (nom,prenom,email,tel,matricule,dateNaissance) VALUE (:nom, :prenom, :email, :tel, :matricule, :dateNaissance)";
        $row = array(
            'nom'=>$nom,
            'prenom'=>$prenom,
            'email'=>$email,
            'tel'=>$tel,
            'matricule'=>$matricule,
            'dateNaissance'=>$date
        );
        $ligne = $this->executeUpdate($req,$row);
        return $ligne;
    }

    public function searchUserByPrenom($search){
        $sql = "select * from etudiant where matricule like '%$search%'";
        $data = $this->executeSelect($sql);
        return $data;
    }

    public function lastId(){
        $id = $this->findLastId();
        return $id;
    }

    public function findEtudiants(){

    }

    public function isExistUser($email){
        $sql="select * from $this->tableName where email='$email' ";
        $data = $this->executeSelect($sql);
        return count($data);
    }

    public function findAllEtudiant($offset, $limit)
    {
        $sql= "select * from etudiant LIMIT $offset,$limit";
        $req = $this->executeSelect($sql);
        return $req;
    }

    public function findById($id)
    {
        return parent::findById($id); // TODO: Change the autogenerated stub
    }

    public function deleteUser($id){
        $sql="delete from etudiant where id=$id";
        return $this->executeUpdateSimple($sql)!=0;
    }

    public function delete($id)
    {
        $this->tableName = 'etudiant';
        return parent::delete($id); // TODO: Change the autogenerated stub
    }


}